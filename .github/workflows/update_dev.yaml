name: update dev data

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:
  schedule:
    - cron: '0 18 * * 1'

jobs:
  discover-providers:
    runs-on: ubuntu-latest
    outputs:
      providers: ${{ steps.find-providers.outputs.providers }}
    steps:
      - uses: actions/checkout@v4
      - name: Find provider scripts
        id: find-providers
        run: |
          providers=$(for i in provider_data/*.py; do basename "$i" .py; done | grep -v utils | jq -R -s -c 'split("\n")[:-1]')
          echo "providers=$providers" >> $GITHUB_OUTPUT
          echo "Found providers: $providers"

  update-providers:
    needs: discover-providers
    runs-on: ubuntu-latest
    strategy:
      matrix:
        provider: ${{ fromJson(needs.discover-providers.outputs.providers) }}
      fail-fast: false

    name: "Update ${{ matrix.provider }}"

    steps:
      - uses: actions/checkout@v4

      - name: "prep env"
        env:
          DOTENV: ${{ secrets.DOTENV }}
        run: |
          echo -n $DOTENV | base64 -d > .env

      - name: "Install uv"
        uses: astral-sh/setup-uv@v6

      - name: "Install the project"
        run: uv sync --all-extras --dev

      - name: "Install playwright"
        run: |
          mkdir -p output
          uv run playwright install

      - name: "Update ${{ matrix.provider }}"
        run: |
          uv run provider_data/${{ matrix.provider }}.py --refresh --dev

  generate-sitemap:
    needs: update-providers
    runs-on: ubuntu-latest
    if: always()

    steps:
      - uses: actions/checkout@v4

      - name: "prep env"
        env:
          DOTENV: ${{ secrets.DOTENV }}
        run: |
          echo -n $DOTENV | base64 -d > .env

      - name: "Install uv"
        uses: astral-sh/setup-uv@v6

      - name: "Install the project"
        run: uv sync --all-extras --dev

      - name: "Generate sitemap"
        run: |
          uv run provider_data/utils/generate_sitemap.py --dev
